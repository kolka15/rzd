{"version":3,"sources":["contexts/dataContext.js","contexts/indexContext.js","components/DelayIndicator/DelayIndicator.js","components/TrackWindow/TrackWindow.js","components/DestinationSwitcher/DestinationSwitcher.js","components/Datepicker/Datepicker.js","components/Buttons/Buttons.js","components/Spinner/Spinner.js","components/Timetable/Timetable.js","components/MainWindow/MainWindow.js","App.js","serviceWorker.js","index.js"],"names":["timeout","flashInteval","flashTimeout","DataContext","React","createContext","DataProvider","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","timetable","undefined","datepickerDate","validateDestAndTimeWarning","loadingData","fetchError","trackedTrainNumber","trackedTrainTime","trackTimerAmount","ticketsFound","requestData","dir","tfl","code0","code1","dt0","checkSeats","withoutSeats","version","getTimetable","bodyFormData","FormData","rid","requestOptions","url","method","data","keys","forEach","el","set","setState","axios","then","responce","RID","setTimeout","fetch","credentials","headers","accept","accept-language","cache-control","content-type","pragma","x-requested-with","referrerPolicy","body","mode","resp2","json","myJson","hasOwnProperty","tp","catch","error","console","log","changeDestination","objectSpread","depatureDateSelect","date","toLocaleDateString","onGetTimetable","trackTicket","selectedTrain","number2","time0","list","filter","train","number","serviceCategories","setInterval","document","title","closeTracking","clearTimeout","clearInterval","inherits","createClass","key","value","react_default","a","createElement","Provider","props","children","Component","IndexContext","dataContext_DataProvider","DelayIndicator","className","style","animationDuration","TrackWindow","Consumer","context","onClick","DestinationSwitcher","Datepicker","es","selected","onChange","locale","dateFormat","minDate","Date","now","maxDate","addDays","registerLocale","ru","Btn1","clickHandler","text","Btn1Green","Spinner","Timetable","map","route0","route1","station0","station1","seats","category","i","typeCarLoc","freeSeats","Buttons_Btn1Green","MainWindow","Fragment","Buttons_Btn1","Spinner_Spinner","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e7574a2.chunk.js","sourcesContent":["import React from 'react'\nimport axios from \"axios\"\n\nexport const DataContext = React.createContext()\n\nlet timeout\nlet flashInteval\nlet flashTimeout\n\nexport class DataProvider extends React.Component {\n\n    state = {\n        timetable: undefined,\n        datepickerDate: '',\n        validateDestAndTimeWarning: false,\n        loadingData: false,\n        fetchError: false,\n        trackedTrainNumber: undefined,\n        trackedTrainTime: undefined,\n        trackTimerAmount: 5,\n        ticketsFound: false,\n        requestData: {\n            dir: '0',\n            tfl: '3',\n            code0: '', //Moscow 2000000, Kaluga 2000351\n            code1: '',\n            dt0: '',\n            checkSeats: '0',\n            withoutSeats: 'y',\n            version: 'v.2018',\n        },\n    }\n\n    getTimetable = () => {\n        let bodyFormData = new FormData();\n        let rid = undefined\n        let requestOptions = {\n            url: 'https://pass.rzd.ru/timetable/public/ru?layer_id=5827',\n            method: 'POST',\n            data: bodyFormData,\n        }\n\n        Object.keys(this.state.requestData).forEach(el => {\n            bodyFormData.set(el, this.state.requestData[el]);\n        })\n\n        this.setState({loadingData: true})\n\n        axios(requestOptions)\n            .then(responce => {\n                rid = responce.data.RID\n                setTimeout(() => {\n                    fetch(\"https://pass.rzd.ru/timetable/public/ru?layer_id=5827\", {\n                        \"credentials\": \"include\",\n                        \"headers\": {\n                            \"accept\": \"application/json, text/javascript, */*; q=0.01\",\n                            \"accept-language\": \"en-US,en;q=0.9,ru;q=0.8,la;q=0.7,bg;q=0.6\",\n                            \"cache-control\": \"no-cache\",\n                            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n                            \"pragma\": \"no-cache\",\n                            \"x-requested-with\": \"XMLHttpRequest\"\n                        },\n                        \"referrerPolicy\": \"no-referrer-when-downgrade\",\n                        \"body\": `dir=0&tfl=3&code0=${this.state.requestData.code0}&code1=${this.state.requestData.code1}&dt0=${this.state.dt0}&checkSeats=0&withoutSeats=y&version=v.2018&rid=${rid}`,\n                        \"method\": \"POST\",\n                        \"mode\": \"cors\"\n                    })\n                        .then(resp2 => {\n                            return resp2.json()\n                        })\n                        .then(myJson => {\n                            if (myJson && myJson.hasOwnProperty('tp')) {\n                                this.setState({\n                                    timetable: myJson.tp[0],\n                                    fetchError: false,\n                                    loadingData: false\n                                })\n                            } else {\n                                this.setState({\n                                    fetchError: true,\n                                    loadingData: false\n                                })\n                            }\n                        })\n                        .catch(error =>\n                            console.log(error)\n                        )\n                }, 1000)\n            })\n    }\n\n    changeDestination = (code0, code1) => {\n        this.setState({\n            validateDestAndTimeWarning: false,\n            requestData: {\n                ...this.state.requestData,\n                code0: code0,\n                code1: code1,\n            }\n        })\n    }\n\n    depatureDateSelect = (date) => {\n        this.setState({\n            datepickerDate: date,\n            validateDestAndTimeWarning: false,\n            requestData: {\n                ...this.state.requestData,\n                dt0: date ? date.toLocaleDateString(\"ru\") : null\n            }\n        })\n    }\n\n    onGetTimetable = () => {\n        if (this.state.requestData.code0\n            && this.state.requestData.code1\n            && this.state.requestData.dt0) {\n            this.setState({validateDestAndTimeWarning: false})\n            this.getTimetable()\n        } else {\n            this.setState({validateDestAndTimeWarning: true})\n        }\n    }\n\n    trackTicket = (selectedTrain) => {\n        const checkSeats = () => {\n            this.getTimetable()\n            let trackedTrain = this.state.timetable.list.filter(train =>\n                train.number === selectedTrain.number\n                && train.serviceCategories.length\n            )\n            if (trackedTrain.length > 0) {\n                this.setState({\n                    ticketsFound: true\n                })\n\n                flashInteval = setInterval(() => {\n                    document.title = \"************\";\n                    flashTimeout = setTimeout(() => {\n                        document.title = \"!!! БИЛЕТ НАЙДЕН !!!\";\n                    }, 400)\n                }, 800)\n\n            } else {\n                this.setState({\n                    ticketsFound: false\n                })\n            }\n\n            timeout = setTimeout(() => {\n                checkSeats()\n            }, this.state.trackTimerAmount * 1000)\n\n        }\n\n        this.setState({\n            trackedTrainNumber: selectedTrain.number2,\n            trackedTrainTime: selectedTrain.time0\n        }, () => checkSeats())\n    }\n\n    closeTracking = () => {\n        this.setState({\n            trackedTrainNumber: undefined,\n            ticketsFound: false,\n        }, () => {\n            clearTimeout(timeout)\n            clearInterval(flashInteval)\n            clearTimeout(flashTimeout)\n            setTimeout(() => {\n                document.title = \"Отслеживание билетов\";\n            }, 450)\n        })\n    }\n\n    render() {\n        return (\n            <DataContext.Provider value={{\n                ...this.state,\n                onGetTimetable: this.onGetTimetable,\n                changeDestination: this.changeDestination,\n                depatureDateSelect: this.depatureDateSelect,\n                trackTicket: this.trackTicket,\n                closeTracking: this.closeTracking,\n\n            }}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n} ","import React from 'react'\nimport {DataProvider} from \"./dataContext\"\n\nexport default function IndexContext(props) {\n    return (\n        <DataProvider>\n            {props.children}\n        </DataProvider>\n    )\n}","import React from \"react\"\nimport './delayIndicator.scss'\n\nexport default function DelayIndicator(props) {\n    return (\n        <div className='delay-indicator'>\n            <div className=\"delay-indicator__scale\" style={{animationDuration: `${props.trackTimerAmount}s`}}>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport {DataContext} from \"../../contexts/dataContext\"\nimport './trackWindow.scss'\nimport DelayIndicator from \"../DelayIndicator/DelayIndicator\"\n\nexport default function TrackWindow() {\n    return (\n        <DataContext.Consumer>\n            {context => (\n                <div className='track-window section-wrapper'>\n                    <span className='close-btn' onClick={context.closeTracking}>&times;</span>\n                    <h2>Номер поезда: {context.trackedTrainNumber}</h2>\n                    <h3 className='mb-5'>{context.trackedTrainTime}</h3>\n\n                    <div className='mb-5'>\n                        <DelayIndicator trackTimerAmount={context.trackTimerAmount}/>\n                    </div>\n                    {\n                        context.ticketsFound\n                            ? <h1>Билеты найдены!!!</h1>\n                            : <h1>Билетов нет</h1>\n                    }\n                </div>\n            )}\n        </DataContext.Consumer>\n    )\n}","import React from 'react'\nimport {DataContext} from \"../../contexts/dataContext\"\nimport './destinationSwitcher.scss'\n\nexport default function DestinationSwitcher() {\n    return (\n        <DataContext.Consumer>\n            {context => (\n                <div className='data-view section-wrapper section-wrapper_sm mb-4'>\n                    <div className=\"data-view__directions\">\n                        <span onClick={() => context.changeDestination('2000000', '2000351')}\n                              className={` data-view__direction ${context.requestData.code0 === '2000000' ? 'active' : ''} \n                              ${context.validateDestAndTimeWarning ? 'validation' : ''} `}>\n                            Москва <span className='single-right'>›</span> Калуга\n                        </span>\n                        <span onClick={() => context.changeDestination('2000351', '2000000')}\n                              className={`data-view__direction ${context.requestData.code0 === '2000351' ? 'active' : ''} \n                              ${context.validateDestAndTimeWarning ? 'validation' : ''}`}>\n                            Калуга <span className='single-right'>›</span> Москва\n                        </span>\n                    </div>\n                </div>\n            )}\n        </DataContext.Consumer>\n    )\n}","import React from 'react'\nimport DatePicker, {registerLocale} from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport './datepicker.scss'\nimport addDays from 'date-fns/addDays/index'\nimport ru from 'date-fns/locale/ru';\nimport {DataContext} from \"../../contexts/dataContext\"\n\nregisterLocale('ru', ru);\n\nexport default function Datepicker() {\n    return (\n        <DataContext.Consumer>\n            {context => (\n                <div className='section-wrapper section-wrapper_sm mb-4 text-left'>\n                    <div className={`d-inline-block ${context.validateDestAndTimeWarning ? 'validation' : ''}`}>\n                        <DatePicker\n                            selected={context.datepickerDate}\n                            onChange={context.depatureDateSelect}\n                            locale=\"ru\"\n                            dateFormat='dd.MM.yyyy'\n                            minDate={Date.now()}\n                            maxDate={addDays(new Date(Date.now()), 45)}\n                        />\n                    </div>\n                </div>\n            )}\n        </DataContext.Consumer>\n    )\n}","import React from 'react'\nimport './buttons.scss'\n\nexport const Btn1 = (props) =>\n    <button className='btn-1' onClick={props.clickHandler}>{props.text}</button>\n\nexport const Btn1Green = (props) =>\n    <button className='btn-1 btn-1_green' onClick={props.clickHandler}>{props.text}</button>\n\n","import './spinner.scss'\nimport React from 'react'\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis mx-3\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport {Spinner}","import React from 'react'\nimport './timetable.scss'\nimport {DataContext} from \"../../contexts/dataContext\"\nimport {Btn1Green} from \"../Buttons/Buttons\"\n\nexport default function Timetable() {\n\n    const renderFreeSeats = (seats) =>\n        <div>\n            <div className='mb-1'>Места:</div>\n\n            {\n                seats.map((category, i) =>\n                    <div key={i}>\n                        <div>{category.typeCarLoc} : {category.freeSeats}</div>\n                    </div>\n                )\n            }\n        </div>\n\n    return (\n        <DataContext.Consumer>\n            {context => (\n                <div className='timetable section-wrapper section-wrapper_sm'>\n                    {\n                        context.timetable.list.map(train =>\n                            <div key={train.number2} className='timetable__row d-flex'>\n\n                                <div>\n                                    <div className='mb-3'>Номер поезда: {train.number2}</div>\n                                    <div className='mb-3'>{train.route0} &mdash; {train.route1}</div>\n                                    <div className='mb-3'>{train.station0} &mdash; {train.station1}</div>\n                                    <div className='mb-3'>{train.time0}</div>\n                                    {\n                                        train.serviceCategories && train.serviceCategories.length\n                                            ? renderFreeSeats(train.serviceCategories)\n                                            : <div className='booked'>Мест нет</div>\n                                    }\n                                </div>\n                                <div className=\"d-flex align-items-end\">\n\n                                    {/*{\n                                        !train.serviceCategories.length &&\n                                        <div>\n                                            <Btn1Green text='Включить отслеживание' clickHandler={()=>context.trackTicket(train)}/>\n                                        </div>\n                                    }*/}\n                                    <div>\n                                        <Btn1Green text='Включить отслеживание' clickHandler={()=>context.trackTicket(train)}/>\n                                    </div>\n\n\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            )}\n        </DataContext.Consumer>\n    )\n}","import React from \"react\"\nimport {DataContext} from \"../../contexts/dataContext\"\nimport DestinationSwitcher from \"../DestinationSwitcher/DestinationSwitcher\"\nimport Datepicker from \"../Datepicker/Datepicker\"\nimport {Btn1} from \"../Buttons/Buttons\"\nimport {Spinner} from \"../Spinner/Spinner\"\nimport Timetable from \"../Timetable/Timetable\"\n\nexport default function MainWindow() {\n    return (\n        <DataContext.Consumer>\n            {context => (\n                <>\n                    <DestinationSwitcher/>\n                    <Datepicker/>\n                    <div className='text-left section-wrapper section-wrapper_sm position-relative'>\n                        {\n                            context.fetchError &&\n                            <span className='fetch-error'>Сервер вернул ошибку</span>\n                        }\n                        <Btn1 text='Расписание' clickHandler={context.onGetTimetable}/>\n                        {\n                            context.loadingData && <div className='spinner-position'><Spinner/></div>\n                        }\n                    </div>\n                    {\n                        !context.loadingData && context.timetable && context.timetable.hasOwnProperty('list') &&\n                        <Timetable/>\n                    }\n                </>\n            )}\n        </DataContext.Consumer>\n    )\n}","import React from 'react';\nimport './App.scss';\n\nimport IndexContext from \"./contexts/indexContext\"\nimport {DataContext} from \"./contexts/dataContext\"\n\nimport TrackWindow from \"./components/TrackWindow/TrackWindow\"\nimport MainWindow from \"./components/MainWindow/MainWindow\"\n\nfunction App() {\n    return (\n        <IndexContext>\n            <DataContext.Consumer>\n                {context => (\n                    <div className=\"App\">\n                        <section className=\"App-header\">\n                            {\n                                context.trackedTrainNumber\n                                ? <TrackWindow/>\n                                : <MainWindow/>\n                            }\n                        </section>\n                    </div>\n                )}\n            </DataContext.Consumer>\n        </IndexContext>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './bootstrap-reboot.scss';\nimport './bootstrap-custom.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}